# (c.iv)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top10perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
summary(Elite)
boxplot(college$Outstate~college$Elite, col = "pink", outpch = 25, outbg = "blue", whiskcol = "orange", main = "Outstate (Left) vs. Elite (Right)")
# (c.v)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top25perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
hist(college$Outstate, main = "College Outstate", col = "purple")
hist(college$Private, main = "Histogram #2", col = "yellow")
par(mfrow=c(2,2))
# (c.vi)
# (a)
college <- read.csv("College.csv", TRUE, ",")
# (b)
college = college [ , -1]
fix(college)
# (c.i)
summary(college)
# (c.ii)
pairs(college[,2:10])
# (c.iii)
boxplot(college$Outstate~college$Private, col = "red", outpch = 25, outbg = "green", whiskcol = "blue", main = "Outstate (Left) vs. Private (Right)")
# (c.iv)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top10perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
summary(Elite)
boxplot(college$Outstate~college$Elite, col = "pink", outpch = 25, outbg = "blue", whiskcol = "orange", main = "Outstate (Left) vs. Elite (Right)")
# (c.v)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top25perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
hist(college$Top10perc, main = "College Outstate", col = "purple")
hist(college$Private, main = "Histogram #2", col = "yellow")
par(mfrow=c(2,2))
# (c.vi)
# (a)
college <- read.csv("College.csv", TRUE, ",")
# (b)
college = college [ , -1]
fix(college)
# (c.i)
summary(college)
# (c.ii)
pairs(college[,2:10])
# (c.iii)
boxplot(college$Outstate~college$Private, col = "red", outpch = 25, outbg = "green", whiskcol = "blue", main = "Outstate (Left) vs. Private (Right)")
# (c.iv)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top10perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
summary(Elite)
boxplot(college$Outstate~college$Elite, col = "pink", outpch = 25, outbg = "blue", whiskcol = "orange", main = "Outstate (Left) vs. Elite (Right)")
# (c.v)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top25perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
hist(college$Top10perc, main = "College Outstate", col = "purple")
hist(college$Top25perc, main = "Histogram #2", col = "yellow")
par(mfrow=c(2,2))
# (c.vi)
# (a)
college <- read.csv("College.csv", TRUE, ",")
# (b)
college = college [ , -1]
fix(college)
# (c.i)
summary(college)
# (c.ii)
pairs(college[,2:10])
# (c.iii)
boxplot(college$Outstate~college$Private, col = "red", outpch = 25, outbg = "green", whiskcol = "blue", main = "Outstate (Left) vs. Private (Right)")
# (c.iv)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top10perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
summary(Elite)
boxplot(college$Outstate~college$Elite, col = "pink", outpch = 25, outbg = "blue", whiskcol = "orange", main = "Outstate (Left) vs. Elite (Right)")
# (c.v)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top25perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
hist(college$Top10perc, main = "Histogram #1", col = "purple")
hist(college$Top25perc, main = "Histogram #2", col = "yellow")
par(mfrow=c(2,2))
# (c.vi)
# (a)
college <- read.csv("College.csv", TRUE, ",")
# (b)
college = college [ , -1]
fix(college)
# (c.i)
summary(college)
# (c.ii)
pairs(college[,2:10])
# (c.iii)
boxplot(college$Outstate~college$Private, col = "red", outpch = 25, outbg = "green", whiskcol = "blue", main = "Outstate (Left) vs. Private (Right)")
# (c.iv)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top10perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
summary(Elite)
boxplot(college$Outstate~college$Elite, col = "pink", outpch = 25, outbg = "blue", whiskcol = "orange", main = "Outstate (Left) vs. Elite (Right)")
# (c.v)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top25perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
hist(college$Apps, main = "Histogram #1", col = "purple")
hist(college$Accept, main = "Histogram #2", col = "yellow")
par(mfrow=c(2,2))
# (c.vi)
# (a)
college <- read.csv("College.csv", TRUE, ",")
# (b)
college = college [ , -1]
fix(college)
# (c.i)
summary(college)
# (c.ii)
pairs(college[,2:10])
# (c.iii)
boxplot(college$Outstate~college$Private, col = "red", outpch = 25, outbg = "green", whiskcol = "blue", main = "Outstate (Left) vs. Private (Right)")
# (c.iv)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top10perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
summary(Elite)
boxplot(college$Outstate~college$Elite, col = "pink", outpch = 25, outbg = "blue", whiskcol = "orange", main = "Outstate (Left) vs. Elite (Right)")
# (c.v)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top25perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
hist(college$PhD, main = "Histogram #1", col = "purple")
hist(college$Terminal, main = "Histogram #2", col = "yellow")
par(mfrow=c(2,2))
# (c.vi)
# (a)
college <- read.csv("College.csv", TRUE, ",")
# (b)
college = college [ , -1]
fix(college)
# (c.i)
summary(college)
# (c.ii)
pairs(college[,2:10])
# (c.iii)
boxplot(college$Outstate~college$Private, col = "red", outpch = 25, outbg = "green", whiskcol = "blue", main = "Outstate (Left) vs. Private (Right)")
# (c.iv)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top10perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
summary(Elite)
boxplot(college$Outstate~college$Elite, col = "pink", outpch = 25, outbg = "blue", whiskcol = "orange", main = "Outstate (Left) vs. Elite (Right)")
# (c.v)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top25perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
hist(college$PhD, main = "Histogram #1", col = "purple")
hist(college$Terminal, main = "Histogram #2", col = "yellow")
par(mfrow=c(2,2))
# (a)
college <- read.csv("College.csv", TRUE, ",")
# (b)
college = college [ , -1]
fix(college)
# (c.i)
summary(college)
# (c.ii)
pairs(college[,2:10])
# (c.iii)
boxplot(college$Outstate~college$Private, col = "red", outpch = 25, outbg = "green", whiskcol = "blue", main = "Outstate (Left) vs. Private (Right)")
# (c.iv)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top10perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
summary(Elite)
boxplot(college$Outstate~college$Elite, col = "pink", outpch = 25, outbg = "blue", whiskcol = "orange", main = "Outstate (Left) vs. Elite (Right)")
# (c.v)
Elite = rep (" No", nrow ( college ))
Elite [ college$Top25perc >50]=" Yes "
Elite =as.factor(Elite)
college = data.frame(college, Elite)
hist(college$PhD, main = "% Faculty with PhDs", col = "purple")
hist(college$Terminal, main = "% Faculty with Terminal Degree", col = "yellow")
par(mfrow=c(2,2))
college <- read.csv("College.csv", TRUE, ",")
# college = college [ , -1]
fix(college)
summary(college)
# Assigns "1" if box says yes, assigns "0" for anything else but yes
college$Private <- +(college$Private == "Yes")
pairs(college[,1:10])
head(college)
f1 <- lm(formula = Grad.Rate ~ Private + Apps + Top25perc + P.Undergrad +
Outstate + Room.Board + Personal + PhD + Terminal +
perc.alumni + Expend, data = college)
summary(f1)
# PROBLEM 2
# Part (a)
college <- read.csv("College.csv", TRUE, ",")
set.seed(123457)
train <- sample(777,466)
College_train <- College[train,]
College_validation <- College[-train,]
summary[College_train$Grad.Rate]
## Min. 1st Qu. Median Mean 3rd Qu. Max
## 10.00 53.00 65.00 65.09 3rd Qu. Max.
## 18.00 54.00 66.00 66.02 77.00 100.00
t.test(College_train$Grad.Rate, College_validation$Grad.Rate)
##
## Welch Two Sample t-test
##
college <- read.csv("College.csv", TRUE, ",")
college = college [ , -1]
fix(college)
summary(college)
# Assigns "1" if box says yes, assigns "0" for anything else but yes
college$Private <- +(college$Private == "Yes")
pairs(college[,1:10])
head(college)
f1 <- lm(formula = Grad.Rate ~ Private + Apps + Top25perc + P.Undergrad +
Outstate + Room.Board + Personal + PhD + Terminal +
perc.alumni + Expend, data = college)
summary(f1)
# PROBLEM 2
# Part (a)
college <- read.csv("College.csv", TRUE, ",")
set.seed(123457)
train <- sample(777,466)
College_train <- College[train,]
College_validation <- College[-train,]
summary[College_train$Grad.Rate]
## Min. 1st Qu. Median Mean 3rd Qu. Max
## 10.00 53.00 65.00 65.09 3rd Qu. Max.
## 18.00 54.00 66.00 66.02 77.00 100.00
t.test(College_train$Grad.Rate, College_validation$Grad.Rate)
##
## Welch Two Sample t-test
##
# PROBLEM 1
college <- read.csv("College.csv", TRUE, ",")
# college = college [ , -1]
fix(college)
summary(college)
# Assigns "1" if box says yes, assigns "0" for anything else but yes
college$Private <- +(college$Private == "Yes")
pairs(college[,1:10])
head(college)
f1 <- lm(formula = Grad.Rate ~ Private + Apps + Top25perc + P.Undergrad +
Outstate + Room.Board + Personal + PhD + Terminal +
perc.alumni + Expend, data = college)
summary(f1)
head(college)
head(college)
college = college [ , -1]
head(college)
f1 <- lm(formula = Grad.Rate ~ Private + Apps + Top25perc + P.Undergrad +
Outstate + Room.Board + Personal + PhD + Terminal +
perc.alumni + Expend, data = college)
summary(f1)
set.seed(123457)
train <- sample(777,466)
College_train <- College[train,]
College_train <- college[train,]
College_validation <- College[-train,]
College_validation <- college[-train,]
summary[College_train$Grad.Rate]
summary(College_train$Grad.Rate)
## Min. 1st Qu. Median Mean 3rd Qu. Max
## 10.00 53.00 65.00 65.09 3rd Qu. Max.
## 18.00 54.00 66.00 66.02 77.00 100.00
t.test(College_train$Grad.Rate, College_validation$Grad.Rate)
## Min. 1st Qu. Median Mean 3rd Qu. Max
## 10.00 53.00 65.00 65.09 3rd Qu. Max.
## 18.00 54.00 66.00 66.02 77.00 100.00
t.test(College_train$Grad.Rate, College_validation$Grad.Rate)
set.seed(123457)
train <- sample(777,466)
College_train <- college[train,]
College_validation <- college[-train,]
summary(College_train$Grad.Rate)
## Min. 1st Qu. Median Mean 3rd Qu. Max
## 10.00 53.00 65.00 65.09 3rd Qu. Max.
## 18.00 54.00 66.00 66.02 77.00 100.00
t.test(College_train$Grad.Rate, College_validation$Grad.Rate)
# PROBLEM 1
college <- read.csv("College.csv", TRUE, ",")
college = college [ , -1]
fix(college)
head(college)
summary(college)
# Assigns "1" if box says yes, assigns "0" for anything else but yes
college$Private <- +(college$Private == "Yes")
pairs(college[,1:10])
head(college)
f1 <- lm(formula = Grad.Rate ~ Private + Apps + Top25perc + P.Undergrad +
Outstate + Room.Board + Personal + PhD + Terminal +
perc.alumni + Expend, data = college)
summary(f1)
# PROBLEM 2
# Part (a)
college <- read.csv("College.csv")
set.seed(123457)
train <- sample(777,466)
College_train <- college[train,]
College_validation <- college[-train,]
summary(College_train$Grad.Rate)
## Min. 1st Qu. Median Mean 3rd Qu. Max
## 10.00 53.00 65.00 65.09 3rd Qu. Max.
## 18.00 54.00 66.00 66.02 77.00 100.00
t.test(College_train$Grad.Rate, College_validation$Grad.Rate)
##
## Welch Two Sample t-test
##
# Part  (b)
fit1 <- lm(Grad.Rate~.,data=College_train)
# summary(fit1)
Prediction <- predict(fit1, newdata=College_validation)
Actual <- College_validation$Grad.Rate
AE = mean(Actual-Prediction)
RMSE = sqrt(mean(Actual-Prediction)^2))
## [1] 0.1744213 <-Prediction Bias, teh closer to 0, the better
RMSE
## [1] 12.2775 <- Predictoin Accuracy, the smaller, the better
##########################
# Classification Tree
##########################
install.packages('rpart')
library(rpart)
install.packages("rpart.plot")
library(rpart.plot)
install.packages('maptree')
library(maptree)
setwd("C:\Users\estro\Documents\GWU MBA\FALL 2021\Foundations of AI\Labs")
data = read.csv("campaign.csv", sep=";")
head(data)
summary(data)
treeModel = rpart(y ~ . , data = data) # default splitting method Gini index
draw.tree(treeModel)
print(treeModel)
probability = predict(treeModel, newdata = data)
prediction = probability[,2]>0.5
actual = data$y
table(actual, prediction)
result = table(actual, prediction)
(result[1,1]+result[2,2])/sum(result) # prediction accuracy
setwd("C:\Users\estro\Documents\GWU MBA\FALL 2021\Foundations of AI\Labs")
data = read.csv("campaign.csv", sep=";")
setwd("C:\Users\estro\Documents\GWU MBA\FALL 2021\Foundations of AI\Labs")
##########################
# Classification Tree
##########################
install.packages('rpart')
#library(rpart)
install.packages("rpart.plot")
#library(rpart.plot)
install.packages('maptree')
#library(maptree)
setwd("C:\Users\estro\Documents\GWU MBA\FALL 2021\Foundations of AI\Labs")
data = read.csv("campaign.csv", sep=";")
head(data)
summary(data)
treeModel = rpart(y ~ . , data = data) # default splitting method Gini index
draw.tree(treeModel)
print(treeModel)
probability = predict(treeModel, newdata = data)
prediction = probability[,2]>0.5
actual = data$y
table(actual, prediction)
result = table(actual, prediction)
(result[1,1]+result[2,2])/sum(result) # prediction accuracy
install.packages("rpart.plot")
install.packages("rpart")
##########################
# Classification Tree
##########################
install.packages('rpart')
#library(rpart)
install.packages("rpart.plot")
#library(rpart.plot)
install.packages('maptree')
#library(maptree)
setwd("C:\Users\estro\Documents\GWU MBA\FALL 2021\Foundations of AI\Labs")
data = read.csv("campaign.csv", sep=";")
head(data)
summary(data)
treeModel = rpart(y ~ . , data = data) # default splitting method Gini index
draw.tree(treeModel)
print(treeModel)
probability = predict(treeModel, newdata = data)
prediction = probability[,2]>0.5
actual = data$y
table(actual, prediction)
result = table(actual, prediction)
(result[1,1]+result[2,2])/sum(result) # prediction accuracy
#install.packages('MASS')
library(MASS)
#install.packages('tree')
library(tree)
set.seed(123456)
train = sample(1:nrow(Boston), nrow(Boston)/2)
tree.boston=tree(medv~., Boston, subset=train)
summary(tree.boston)
plot(tree.boston)
text(tree.boston, pretty=0)
# Evaluate Tree Model
yhat = predict(tree.boston, newdata=Boston[-train,])
boston.test = Boston[-train, "medv"]
plot(yhat, boston.test)
abline(0,1)
mean((yhat-boston.test)^2)
# Evaluation Regression Model
df = Boston[train,]
fit = lm(medv~., data=df)
yhat=predict(fit, newdata=Boston[-train,])
boston.test = Boston[-train, "medv"]
plot(yhat, boston.test)
abline(0,1)
mean((yhat-boston.test)^2)
#install.packages('MASS')
library(MASS)
#install.packages('tree')
library(tree)
set.seed(123456)
train = sample(1:nrow(Boston), nrow(Boston)/2)
tree.boston=tree(medv~., Boston, subset=train)
summary(tree.boston)
plot(tree.boston)
text(tree.boston, pretty=0)
setwd("C:/Users/estro/code/MechaCar_Statistical_Analysis")
#########################
##### DELIVERABLE 1 #####
#########################
library(tidyverse)
library(dplyr)
mechacars = read.csv("MechaCar_mpg.csv")
suspension_coil = read.csv("Suspension_Coil.csv") # Deliverable 2
lm_function <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mechacars)
lm_function
# mpg = dependent variable, everything else = independent variable
# "~" symbol references relationship above. Dep on left, ind on right.
summary(lm_function)
#########################
##### DELIVERABLE 2 #####
#########################
head(suspension_coil)
total_summary <- suspension_coil  %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = "keep") #create summary table with multiple columns
total_summary
lot_summary <- suspension_coil  %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = "keep")
#########################
##### DELIVERABLE 3 #####
#########################
# t-test across all Lots
t.test(suspension_coil$PSI,mu = 1500)
# t-test on Lot 1
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
# t-test on Lot 2
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
# t-test on Lot 3
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
# t-test on Lot 1
Lot_1 <- t.test(subset(suspension_coil,Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
View(Lot_1)
View(Lot_1)
#########################
##### DELIVERABLE 1 #####
#########################
library(tidyverse)
library(dplyr)
mechacars = read.csv("MechaCar_mpg.csv")
suspension_coil = read.csv("Suspension_Coil.csv") # Deliverable 2
lm_function <- lm(mpg ~ vehicle_length + vehicle_weight + spoiler_angle + ground_clearance + AWD,data=mechacars)
lm_function
# mpg = dependent variable, everything else = independent variable
# "~" symbol references relationship above. Dep on left, ind on right.
summary(lm_function)
#########################
##### DELIVERABLE 2 #####
#########################
head(suspension_coil)
total_summary <- suspension_coil  %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = "keep") #create summary table with multiple columns
total_summary
lot_summary <- suspension_coil  %>% group_by(Manufacturing_Lot) %>% summarize(Mean=mean(PSI),Median=median(PSI),Variance=var(PSI),SD=sd(PSI), .groups = "keep")
#########################
##### DELIVERABLE 3 #####
#########################
# t-test across all Lots
t.test(suspension_coil$PSI,mu = 1500)
# t-test on Lot 1
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot1")$PSI,mu = 1500)
# t-test on Lot 2
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot2")$PSI,mu = 1500)
# t-test on Lot 3
t.test(subset(suspension_coil,Manufacturing_Lot=="Lot3")$PSI,mu = 1500)
